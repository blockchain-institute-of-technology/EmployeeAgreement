{
  "contractName": "EmploymentAgreement",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "lastGoldUpdateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oraclize_USD_ID",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ETH_USD",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oraclize_GOLD_ID",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastEthUpdateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GOLD_USD",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "constructor",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updatePrices",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_oraclizeID",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506110d4806100206000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e146100a9578063336f3cad1461012057806338bbfa501461014b57806346c784d91461020857806349dd12621461023b5780636260f55b1461024557806371d55d141461027057806390fa17bb146102a3578063995e1874146102ad578063f5cb7915146102d8575b600080fd5b3480156100b557600080fd5b5061011e6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610303565b005b34801561012c57600080fd5b5061013561038c565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b506102066004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610392565b005b34801561021457600080fd5b5061021d610397565b60405180826000191660001916815260200191505060405180910390f35b61024361039d565b005b34801561025157600080fd5b5061025a6103a7565b6040518082815260200191505060405180910390f35b34801561027c57600080fd5b506102856103ad565b60405180826000191660001916815260200191505060405180910390f35b6102ab6103b3565b005b3480156102b957600080fd5b506102c26103bd565b6040518082815260200191505060405180910390f35b3480156102e457600080fd5b506102ed6103c3565b6040518082815260200191505060405180910390f35b61030b6103c9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034457600080fd5b60045460001916826000191614156103715761035f816105dc565b60028190555042600681905550610388565b61037a816105dc565b600381905550426007819055505b5050565b60075481565b505050565b60045481565b6103a56105f0565b565b60025481565b60055481565b6103bb61039d565b565b60065481565b60035481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104165761041460006106bd565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b505050506040513d60208110156105c657600080fd5b8101908080519060200190929190505050905090565b60006105e9826000610952565b9050919050565b6106b16040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604c81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d455448555344292e726573756c742e81526020017f584554485a5553442e632e300000000000000000000000000000000000000000815250610c46565b60048160001916905550565b6000806106dd731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61109d565b111561074057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b600061075f73c03a2615d5efaf5f49f60b7bb6583eaec212fdf161109d565b11156107c25773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b60006107e17320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61109d565b1115610844577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b60006108637393bbbe5ce77034e3095f0479919962a903f898ad61109d565b11156108c6577393bbbe5ce77034e3095f0479919962a903f898ad6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b60006108e57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61109d565b1115610948577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b600090505b919050565b6000606060008060008693506000925060009150600090505b8351811015610c275760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156109a657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610abe575060397f0100000000000000000000000000000000000000000000000000000000000000028482815181101515610a4e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b15610b6f578115610ae1576000861415610ad757610c27565b8580600190039650505b600a8302925060308482815181101515610af757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250610c1a565b602e7f0100000000000000000000000000000000000000000000000000000000000000028482815181101515610ba157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610c1957600191505b5b808060010191505061096b565b6000861115610c395785600a0a830292505b8294505050505092915050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c9557610c9360006106bd565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d1a57600080fd5b505af1158015610d2e573d6000803e3d6000fd5b505050506040513d6020811015610d4457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e3f578082015181840152602081019050610e24565b50505050905090810190601f168015610e6c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e8b57600080fd5b505af1158015610e9f573d6000803e3d6000fd5b505050506040513d6020811015610eb557600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610eeb5760006001029150611096565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610fa3578082015181840152602081019050610f88565b50505050905090810190601f168015610fd05780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611009578082015181840152602081019050610fee565b50505050905090810190601f1680156110365780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561105757600080fd5b505af115801561106b573d6000803e3d6000fd5b50505050506040513d602081101561108257600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b90509190505600a165627a7a72305820ab2f056856dcc00760018b163748269e6429633a4ac091e8478bd993154ec8910029",
  "deployedBytecode": "0x6080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e146100a9578063336f3cad1461012057806338bbfa501461014b57806346c784d91461020857806349dd12621461023b5780636260f55b1461024557806371d55d141461027057806390fa17bb146102a3578063995e1874146102ad578063f5cb7915146102d8575b600080fd5b3480156100b557600080fd5b5061011e6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610303565b005b34801561012c57600080fd5b5061013561038c565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b506102066004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610392565b005b34801561021457600080fd5b5061021d610397565b60405180826000191660001916815260200191505060405180910390f35b61024361039d565b005b34801561025157600080fd5b5061025a6103a7565b6040518082815260200191505060405180910390f35b34801561027c57600080fd5b506102856103ad565b60405180826000191660001916815260200191505060405180910390f35b6102ab6103b3565b005b3480156102b957600080fd5b506102c26103bd565b6040518082815260200191505060405180910390f35b3480156102e457600080fd5b506102ed6103c3565b6040518082815260200191505060405180910390f35b61030b6103c9565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034457600080fd5b60045460001916826000191614156103715761035f816105dc565b60028190555042600681905550610388565b61037a816105dc565b600381905550426007819055505b5050565b60075481565b505050565b60045481565b6103a56105f0565b565b60025481565b60055481565b6103bb61039d565b565b60065481565b60035481565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104165761041460006106bd565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b505050506040513d60208110156105c657600080fd5b8101908080519060200190929190505050905090565b60006105e9826000610952565b9050919050565b6106b16040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604c81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d455448555344292e726573756c742e81526020017f584554485a5553442e632e300000000000000000000000000000000000000000815250610c46565b60048160001916905550565b6000806106dd731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61109d565b111561074057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b600061075f73c03a2615d5efaf5f49f60b7bb6583eaec212fdf161109d565b11156107c25773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b60006107e17320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61109d565b1115610844577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b60006108637393bbbe5ce77034e3095f0479919962a903f898ad61109d565b11156108c6577393bbbe5ce77034e3095f0479919962a903f898ad6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b60006108e57351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61109d565b1115610948577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061094d565b600090505b919050565b6000606060008060008693506000925060009150600090505b8351811015610c275760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156109a657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610abe575060397f0100000000000000000000000000000000000000000000000000000000000000028482815181101515610a4e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b15610b6f578115610ae1576000861415610ad757610c27565b8580600190039650505b600a8302925060308482815181101515610af757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250610c1a565b602e7f0100000000000000000000000000000000000000000000000000000000000000028482815181101515610ba157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610c1957600191505b5b808060010191505061096b565b6000861115610c395785600a0a830292505b8294505050505092915050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610c9557610c9360006106bd565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d1a57600080fd5b505af1158015610d2e573d6000803e3d6000fd5b505050506040513d6020811015610d4457600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e3f578082015181840152602081019050610e24565b50505050905090810190601f168015610e6c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e8b57600080fd5b505af1158015610e9f573d6000803e3d6000fd5b505050506040513d6020811015610eb557600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610eeb5760006001029150611096565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610fa3578082015181840152602081019050610f88565b50505050905090810190601f168015610fd05780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015611009578082015181840152602081019050610fee565b50505050905090810190601f1680156110365780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561105757600080fd5b505af115801561106b573d6000803e3d6000fd5b50505050506040513d602081101561108257600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b90509190505600a165627a7a72305820ab2f056856dcc00760018b163748269e6429633a4ac091e8478bd993154ec8910029",
  "sourceMap": "112:1332:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;112:1332:0;;;;;;;",
  "deployedSourceMap": "112:1332:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:341;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1098:341:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;318:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:30:0;;;;;;;;;;;;;;;;;;;;;;;3121:69:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3121:69:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:30:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;213:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:74;;;;;;163:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;163:19:0;;;;;;;;;;;;;;;;;;;;;;;247:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;577:56;;;;;;285:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:29:0;;;;;;;;;;;;;;;;;;;;;;;186:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;186:20:0;;;;;;;;;;;;;;;;;;;;;;;1098:341;1178:20;:18;:20::i;:::-;1164:34;;:10;:34;;;;1161:44;;;1200:5;;;1161:44;1230:15;;1215:30;;;:11;:30;;;;1211:224;;;1266:17;1275:7;1266:8;:17::i;:::-;1256:7;:27;;;;1313:3;1293:17;:23;;;;1211:224;;;1353:17;1362:7;1353:8;:17::i;:::-;1342:8;:28;;;;1401:3;1380:18;:24;;;;1211:224;1098:341;;:::o;318:30::-;;;;:::o;3121:69:1:-;;;;:::o;213:30:0:-;;;;:::o;637:74::-;675:11;:9;:11::i;:::-;637:74::o;163:19::-;;;;:::o;247:31::-;;;;:::o;577:56::-;614:14;:12;:14::i;:::-;577:56::o;285:29::-;;;;:::o;186:20::-;;;;:::o;6372:112:1:-;6432:7;1623:1;1617:3;;;;;;;;;;;1609:15;;;1606:55;;;1626:35;1340:1;1626:19;:35::i;:::-;;1606:55;1692:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1692:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1692:16:1;;;;;;;;;;;;;;;;1671:8;;:38;;;;;;;;;;;;;;;;;;6457:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6457:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6457:20:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6457:20:1;;;;;;;;;;;;;;;;6450:27;;6372:112;:::o;10292:92::-;10339:4;10362:15;10371:2;10375:1;10362:8;:15::i;:::-;10355:22;;10292:92;;;:::o;715:160:0:-;769:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:101::i;:::-;751:15;:119;;;;;;;715:160::o;1866:1140:1:-;1929:4;2004:1;1948:55;1960:42;1948:11;:55::i;:::-;:57;1944:193;;;2058:42;2030:3;;:71;;;;;;;;;;;;;;;;;;2122:4;2115:11;;;;1944:193;2206:1;2150:55;2162:42;2150:11;:55::i;:::-;:57;2146:201;;;2268:42;2240:3;;:71;;;;;;;;;;;;;;;;;;2332:4;2325:11;;;;2146:201;2416:1;2360:55;2372:42;2360:11;:55::i;:::-;:57;2356:200;;;2477:42;2449:3;;:71;;;;;;;;;;;;;;;;;;2541:4;2534:11;;;;2356:200;2625:1;2569:55;2581:42;2569:11;:55::i;:::-;:57;2565:202;;;2688:42;2660:3;;:71;;;;;;;;;;;;;;;;;;2752:4;2745:11;;;;2565:202;2836:1;2780:55;2792:42;2780:11;:55::i;:::-;:57;2776:202;;;2899:42;2871:3;;:71;;;;;;;;;;;;;;;;;;2963:4;2956:11;;;;2776:202;2994:5;2987:12;;1866:1140;;;;:::o;10424:588::-;10480:4;10496:20;10538:9;10561:13;10597:6;10525:2;10496:32;;10550:1;10538:13;;10577:5;10561:21;;10604:1;10597:8;;10592:357;10609:7;:14;10607:1;:16;10592:357;;;10662:2;10648:16;;:7;10656:1;10648:10;;;;;;;;;;;;;;;;;;;;:16;;;;;10647:38;;;;;10682:2;10668:16;;:7;10676:1;10668:10;;;;;;;;;;;;;;;;;;;;:16;;;;;10647:38;10643:295;;;10708:8;10704:102;;;10748:1;10742:2;:7;10738:49;;;10751:5;;10738:49;10783:4;;;;;;;;10704:102;10831:2;10823:10;;;;10878:2;10864:7;10872:1;10864:10;;;;;;;;;;;;;;;;;;;;10859:16;;;:21;10851:29;;;;10643:295;;;10919:2;10905:16;;:7;10913:1;10905:10;;;;;;;;;;;;;;;;;;;;:16;;;;10901:37;;;10934:4;10923:15;;10901:37;10643:295;10625:3;;;;;;;10592:357;;;10967:1;10962:2;:6;10958:26;;;10982:2;10978;:6;10970:14;;;;10958:26;11001:4;10994:11;;10424:588;;;;;;;;:::o;3500:306::-;3585:10;3606;1623:1;1617:3;;;;;;;;;;;1609:15;;;1606:55;;;1626:35;1340:1;1626:19;:35::i;:::-;;1606:55;1692:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1692:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1692:16:1;;;;;;;;;;;;;;;;1671:8;;:38;;;;;;;;;;;;;;;;;;3619:8;;;;;;;;;;;:17;;;3637:10;3619:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3619:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3619:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3619:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3619:29:1;;;;;;;;;;;;;;;;3606:42;;3692:6;3680:11;:18;3670:7;:28;3662:5;:36;3658:50;;;3707:1;3700:8;;;;;;3658:50;3752:8;;;;;;;;;;;:14;;;3773:5;3780:1;3783:10;3795:3;3752:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3752:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3752:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3752:47:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3752:47:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3752:47:1;;;;;;;;;;;;;;;;3745:54;;1719:1;3500:306;;;;;:::o;6866:150::-;6928:10;6994:5;6982:18;6973:27;;6959:51;;;:::o",
  "source": "pragma solidity ^0.4.23;//please import oraclizeAPI_pre0.4.sol when solidity < 0.4.0\nimport \"./OracalizeI.sol\";\ncontract EmploymentAgreement is usingOraclize {\n\n  uint public ETH_USD;\n  uint public GOLD_USD;\n  \n  bytes32 public oraclize_USD_ID;\n  bytes32 public oraclize_GOLD_ID;\n  \n  uint public lastEthUpdateTime;\n  uint public lastGoldUpdateTime;\n    //Employee[]\n    //mapping(address => )\n\n\n  /*Employee public brandon = Employee(3,now,0);\n\n  struct Employee{\n    //in terms of ounces of gold\n    uint id; \n    uint wage;\n    uint lastPaid;\n    uint balanceDue;\n\n  }\n*/\n  function constructor() payable{ \n    updatePrices();\n  }\n\n  function updatePrices() payable {\n    getETHUSD();\n   // getGOLDUSD();\n  }\n\n  function getETHUSD() internal {\n    oraclize_USD_ID = oraclize_query(\"URL\", \"json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\");\n  }\n  function getGOLDUSD() internal {\n    oraclize_GOLD_ID = oraclize_query(\"URL\", \"html(https://www.bullionvault.com/gold-price-chart.do).xpath(.//*[@class='row']/div[2]/div[1]/div/div/table/tbody/tr[3]/td[1]/span\");\n  }\n\n  function __callback(bytes32 _oraclizeID, string _result) {\n    if(msg.sender != oraclize_cbAddress()) throw;\n    if( _oraclizeID == oraclize_USD_ID){\n        ETH_USD = parseInt(_result);\n        lastEthUpdateTime = now;\n    }\n    else{\n        GOLD_USD = parseInt(_result);\n        lastGoldUpdateTime = now;\n        //GOLD_USD = 5;\n    }\n  }\n\n\n\n}\n\n/*\ncontract EmploymentAgreement is usingOraclize{\n\n\tstring public ETHUSD;\n\n\tevent newOraclizeQuery(string description);\n    event newKrakenPriceTicker(string price);\n\n\n\taddress public employer;\n\taddress public employee;\n\tuint public outstandingBalance;\n\tuint public lastPaymentTime;\n\tuint constant PAY_PERIOD = 4 weeks;\n\n\tfunction constructor() public {\n\t\temployer = msg.sender;\n\t\tlastPaymentTime = now;\n\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n        update();\n\n\t}\n\tevent paymentRequest(address employee, uint oustandingBalance);\n\n\tfunction requestPayment(uint eth_per_three_oz_gold) private {\n\t\tif(lastPaymentTime>PAY_PERIOD){\n\t\t\toutstandingBalance+= eth_per_three_oz_gold;\n\t\t}\n\t}\n\n\tfunction payEmployee() payable {\n\t\toutstandingBalance = outstandingBalance-msg.value;\n\t\temployee.transfer(msg.value);\n\t}\n\n\n\tfunction __callback(bytes32 myid, string result, bytes proof) {\n        if (msg.sender != oraclize_cbAddress()) throw;\n        ETHUSD = result;\n        newKrakenPriceTicker(ETHUSD);\n        update();\n    }\n\n\tfunction update() payable {\n\t\tif (oraclize.getPrice(\"URL\") > this.balance) {\n            newOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\n        } else {\n            newOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\n            oraclize_query(60, \"URL\", \"json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\");\n        }\n    }\n\n    function getUSD() returns(string){\n    \treturn(ETHUSD);\n    }\n\n}*/\n",
  "sourcePath": "/Users/bit1/BrandonDev/EmployeeAgreement/contracts/EmploymentAgreement.sol",
  "ast": {
    "absolutePath": "/Users/bit1/BrandonDev/EmployeeAgreement/contracts/EmploymentAgreement.sol",
    "exportedSymbols": {
      "EmploymentAgreement": [
        94
      ]
    },
    "id": 95,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/bit1/BrandonDev/EmployeeAgreement/contracts/OracalizeI.sol",
        "file": "./OracalizeI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 1625,
        "src": "85:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1624,
              "src": "144:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$1624",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "144:13:0"
          }
        ],
        "contractDependencies": [
          1624
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 94,
        "linearizedBaseContracts": [
          94,
          1624
        ],
        "name": "EmploymentAgreement",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "ETH_USD",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "163:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "163:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "GOLD_USD",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "186:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "186:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "oraclize_USD_ID",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "213:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "213:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "oraclize_GOLD_ID",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "247:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "lastEthUpdateTime",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "285:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "285:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "lastGoldUpdateTime",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "318:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "318:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "607:26:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "614:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "614:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "constructor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:0:0"
            },
            "scope": 94,
            "src": "577:56:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "669:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26,
                      "name": "getETHUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "675:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "675:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "675:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 30,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:0:0"
            },
            "scope": 94,
            "src": "637:74:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "745:130:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "oraclize_USD_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "751:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "784:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d455448555344292e726573756c742e584554485a5553442e632e30",
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "791:78:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_62003bc7f4f1e743eb76f98ef93d7d28b3dd74eadc56c40c3a08306558eeacf0",
                            "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\""
                          },
                          "value": "json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_62003bc7f4f1e743eb76f98ef93d7d28b3dd74eadc56c40c3a08306558eeacf0",
                            "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\""
                          }
                        ],
                        "id": 34,
                        "name": "oraclize_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          473,
                          515,
                          561,
                          605,
                          648,
                          693,
                          742,
                          789
                        ],
                        "referencedDeclaration": 473,
                        "src": "769:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "769:101:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "751:119:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "751:119:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getETHUSD",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:0:0"
            },
            "scope": 94,
            "src": "715:160:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "909:185:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "oraclize_GOLD_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "915:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "949:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "68746d6c2868747470733a2f2f7777772e62756c6c696f6e7661756c742e636f6d2f676f6c642d70726963652d63686172742e646f292e7870617468282e2f2f2a5b40636c6173733d27726f77275d2f6469765b325d2f6469765b315d2f6469762f6469762f7461626c652f74626f64792f74725b335d2f74645b315d2f7370616e",
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "956:132:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_aa14b1fc2c12925e92523a39198a27edeb3111b31110400f7a527a51e0757d01",
                            "typeString": "literal_string \"html(https://www.bullionvault.com/gold-price-chart.do).xpath(.//*[@class='row']/div[2]/div[1]/div/div/table/tbody/tr[3]/td[1]/span\""
                          },
                          "value": "html(https://www.bullionvault.com/gold-price-chart.do).xpath(.//*[@class='row']/div[2]/div[1]/div/div/table/tbody/tr[3]/td[1]/span"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_aa14b1fc2c12925e92523a39198a27edeb3111b31110400f7a527a51e0757d01",
                            "typeString": "literal_string \"html(https://www.bullionvault.com/gold-price-chart.do).xpath(.//*[@class='row']/div[2]/div[1]/div/div/table/tbody/tr[3]/td[1]/span\""
                          }
                        ],
                        "id": 45,
                        "name": "oraclize_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          473,
                          515,
                          561,
                          605,
                          648,
                          693,
                          742,
                          789
                        ],
                        "referencedDeclaration": 473,
                        "src": "934:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "934:155:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "915:174:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "915:174:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getGOLDUSD",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:0"
            },
            "scope": 94,
            "src": "878:216:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1155:284:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "1164:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1164:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "1178:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1178:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1164:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 65,
                  "nodeType": "IfStatement",
                  "src": "1161:44:0",
                  "trueBody": {
                    "id": 64,
                    "nodeType": "Throw",
                    "src": "1200:5:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "_oraclizeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1215:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 67,
                      "name": "oraclize_USD_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1230:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1215:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "1332:103:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "GOLD_USD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1342:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 82,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "1362:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 81,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1452,
                                1551
                              ],
                              "referencedDeclaration": 1452,
                              "src": "1353:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) returns (uint256)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1353:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1342:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "1342:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 86,
                            "name": "lastGoldUpdateTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1380:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "1401:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1380:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "1380:24:0"
                      }
                    ]
                  },
                  "id": 91,
                  "nodeType": "IfStatement",
                  "src": "1211:224:0",
                  "trueBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1246:77:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "ETH_USD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1256:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 71,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "1275:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 70,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1452,
                                1551
                              ],
                              "referencedDeclaration": 1452,
                              "src": "1266:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) returns (uint256)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1266:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1256:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "1256:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "lastEthUpdateTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1293:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "1313:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1293:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1293:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 93,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_oraclizeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1118:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1139:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:37:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:0:0"
            },
            "scope": 94,
            "src": "1098:341:0",
            "stateMutability": "nonpayable",
            "superFunction": 390,
            "visibility": "public"
          }
        ],
        "scope": 95,
        "src": "112:1332:0"
      }
    ],
    "src": "0:2989:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bit1/BrandonDev/EmployeeAgreement/contracts/EmploymentAgreement.sol",
    "exportedSymbols": {
      "EmploymentAgreement": [
        94
      ]
    },
    "id": 95,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/bit1/BrandonDev/EmployeeAgreement/contracts/OracalizeI.sol",
        "file": "./OracalizeI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 95,
        "sourceUnit": 1625,
        "src": "85:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1624,
              "src": "144:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$1624",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "144:13:0"
          }
        ],
        "contractDependencies": [
          1624
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 94,
        "linearizedBaseContracts": [
          94,
          1624
        ],
        "name": "EmploymentAgreement",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "ETH_USD",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "163:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "163:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "GOLD_USD",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "186:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "186:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "name": "oraclize_USD_ID",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "213:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "213:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "oraclize_GOLD_ID",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "247:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "247:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "name": "lastEthUpdateTime",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "285:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "285:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 16,
            "name": "lastGoldUpdateTime",
            "nodeType": "VariableDeclaration",
            "scope": 94,
            "src": "318:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "318:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "607:26:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19,
                      "name": "updatePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "614:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "614:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 23,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "constructor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:0:0"
            },
            "scope": 94,
            "src": "577:56:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "669:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26,
                      "name": "getETHUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "675:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "675:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "675:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 30,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updatePrices",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "669:0:0"
            },
            "scope": 94,
            "src": "637:74:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "745:130:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33,
                      "name": "oraclize_USD_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "751:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "784:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d455448555344292e726573756c742e584554485a5553442e632e30",
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "791:78:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_62003bc7f4f1e743eb76f98ef93d7d28b3dd74eadc56c40c3a08306558eeacf0",
                            "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\""
                          },
                          "value": "json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_62003bc7f4f1e743eb76f98ef93d7d28b3dd74eadc56c40c3a08306558eeacf0",
                            "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=ETHUSD).result.XETHZUSD.c.0\""
                          }
                        ],
                        "id": 34,
                        "name": "oraclize_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          473,
                          515,
                          561,
                          605,
                          648,
                          693,
                          742,
                          789
                        ],
                        "referencedDeclaration": 473,
                        "src": "769:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "769:101:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "751:119:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "751:119:0"
                }
              ]
            },
            "documentation": null,
            "id": 41,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getETHUSD",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:0:0"
            },
            "scope": 94,
            "src": "715:160:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "909:185:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 44,
                      "name": "oraclize_GOLD_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "915:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "949:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "68746d6c2868747470733a2f2f7777772e62756c6c696f6e7661756c742e636f6d2f676f6c642d70726963652d63686172742e646f292e7870617468282e2f2f2a5b40636c6173733d27726f77275d2f6469765b325d2f6469765b315d2f6469762f6469762f7461626c652f74626f64792f74725b335d2f74645b315d2f7370616e",
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "956:132:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_aa14b1fc2c12925e92523a39198a27edeb3111b31110400f7a527a51e0757d01",
                            "typeString": "literal_string \"html(https://www.bullionvault.com/gold-price-chart.do).xpath(.//*[@class='row']/div[2]/div[1]/div/div/table/tbody/tr[3]/td[1]/span\""
                          },
                          "value": "html(https://www.bullionvault.com/gold-price-chart.do).xpath(.//*[@class='row']/div[2]/div[1]/div/div/table/tbody/tr[3]/td[1]/span"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_aa14b1fc2c12925e92523a39198a27edeb3111b31110400f7a527a51e0757d01",
                            "typeString": "literal_string \"html(https://www.bullionvault.com/gold-price-chart.do).xpath(.//*[@class='row']/div[2]/div[1]/div/div/table/tbody/tr[3]/td[1]/span\""
                          }
                        ],
                        "id": 45,
                        "name": "oraclize_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          473,
                          515,
                          561,
                          605,
                          648,
                          693,
                          742,
                          789
                        ],
                        "referencedDeclaration": 473,
                        "src": "934:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "934:155:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "915:174:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "915:174:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getGOLDUSD",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:0"
            },
            "scope": 94,
            "src": "878:216:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "1155:284:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 59,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "1164:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1164:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 61,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "1178:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1178:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1164:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 65,
                  "nodeType": "IfStatement",
                  "src": "1161:44:0",
                  "trueBody": {
                    "id": 64,
                    "nodeType": "Throw",
                    "src": "1200:5:0"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "_oraclizeID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "1215:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 67,
                      "name": "oraclize_USD_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1230:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1215:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "1332:103:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "GOLD_USD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1342:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 82,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "1362:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 81,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1452,
                                1551
                              ],
                              "referencedDeclaration": 1452,
                              "src": "1353:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) returns (uint256)"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1353:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1342:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "1342:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 86,
                            "name": "lastGoldUpdateTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "1380:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "1401:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1380:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "1380:24:0"
                      }
                    ]
                  },
                  "id": 91,
                  "nodeType": "IfStatement",
                  "src": "1211:224:0",
                  "trueBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1246:77:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "ETH_USD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "1256:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 71,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "1275:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 70,
                              "name": "parseInt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1452,
                                1551
                              ],
                              "referencedDeclaration": 1452,
                              "src": "1266:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) returns (uint256)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1266:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1256:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "1256:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "lastEthUpdateTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "1293:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "1313:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1293:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1293:23:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 93,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "_oraclizeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1118:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1139:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:37:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:0:0"
            },
            "scope": 94,
            "src": "1098:341:0",
            "stateMutability": "nonpayable",
            "superFunction": 390,
            "visibility": "public"
          }
        ],
        "scope": 95,
        "src": "112:1332:0"
      }
    ],
    "src": "0:2989:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xb692e2d396a413c4e4d49c8930b34e2411e9a7fd",
      "transactionHash": "0x746a1f2d18302dcfade8786ef450831b990586db12958cd87fc435d746b627c2"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x9630a80b45add77ffc75e503005aa3c77e397220",
      "transactionHash": "0x039e1dff3c5793bfdb2e4c347896f78d692abaf0d5b074d7754647976bd2f7b5"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-13T16:14:14.401Z"
}